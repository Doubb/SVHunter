import os, sys


class LLDP(object):
    
    def __init__(self,ip,msg,field,content):
        self.ip = ip
        self.msg = msg
        self.field = field
        self.content = content
        self.build_packet()
        self.dvc = self.init_device()
        
    def send_msg(self):
        if self.msg == "multipartresponse":
            self.multi_part_response()
        elif self.msg == "packetin":
            self.packet_in()

    def build_packet(self):
        buf = self.field + "\n" + self.content + "\n"
        with open('/tmp/packet', 'w') as f:
            f.write(buf)

    def init_device(self):
        os.system("./scripts/openflow/ovs_init.sh")
        return


    def multi_part_response(self):
        cmd = "./scripts/openflow/multipart.sh " + self.ip
        os.system(cmd)
        return

    def packet_in(self):
        #buggy code, disconnected immediately when connecting to controller
        os.system("./scripts/openflow/packetin.sh")
        "Create network"
        topo = SingleSwitchTopo(n=2)
        c_ip,c_port = self.ip.split(":") 
        net = Mininet(topo=topo, link=TCLink,listenPort = 7788)
        net.addController(name='c0',
                      controller=RemoteController,
                      ip=c_ip,
                      protocol='tcp',
                      port=int(c_port))
        net.build()
        net.start()
        print "pingAll"
        net.pingAll()
        net.stop()
        return
